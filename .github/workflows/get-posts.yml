name: openframeworks Forum RSS generator + Pages deploy

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: scrape
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Disable built-in cache to avoid path validation errors
          # Re-enable later once installs are stable

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Commit lockfile if updated
        run: |
          if ! git diff --quiet -- pnpm-lock.yaml; then
            echo "Lockfile changed. Committing updated pnpm-lock.yaml"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add pnpm-lock.yaml
            git commit -m "chore(ci): sync pnpm lockfile [skip ci]"
            git push origin HEAD:main
          else
            echo "Lockfile is up to date."
          fi

      - name: Run scraper
        run: pnpm run scrape

      - name: Debug output (status + list)
        run: |
          echo "Git status:"
          git status
          echo "Files in docs/:"
          ls -la docs/ || true
          echo "feed.xml head:"
          head -n 20 docs/feed.xml || true
          echo "Diff (docs/):"
          git --no-pager diff --stat docs/ || true

      - name: Commit and push docs if changed (optional)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # stage generated files
          git add docs/

          # commit only if there are staged changes
          if ! git diff --staged --quiet; then
            git commit -m "Update scraped data [skip ci]"
            # push explicitly to main to avoid detached HEAD issues
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
