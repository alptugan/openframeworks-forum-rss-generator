// Fetch and display posts
async function loadPosts() {
    const loadingEl = document.getElementById("loading");
    const postsEl = document.getElementById("posts");
    const errorEl = document.getElementById("error");
    const searchInput = document.getElementById("searchInput");

    try {
        // Load posts.json (generated by the scraper)
        const response = await fetch("posts.json");

        if (!response.ok) {
            throw new Error("Failed to load posts");
        }

        const posts = await response.json();

        // Hide loading
        loadingEl.style.display = "none";

        // Update stats
        updateStats(posts);

        // Store posts globally for search
        window.allPosts = posts;

        // Display posts
        displayPosts(posts);

        // Setup search
        searchInput.addEventListener("input", (e) => {
            const query = e.target.value.toLowerCase();
            const filtered = posts.filter(
                (post) => post.title.toLowerCase().includes(query) || post.author.toLowerCase().includes(query)
            );
            displayPosts(filtered);
        });
    } catch (error) {
        loadingEl.style.display = "none";
        errorEl.style.display = "block";
        errorEl.textContent = `Error loading posts: ${error.message}. Make sure to run the scraper first to generate posts.json`;
    }
}

function updateStats(posts) {
    const postCount = posts.length;
    const authors = new Set(posts.map((p) => p.author));
    const authorCount = authors.size;

    document.getElementById("postCount").textContent = postCount;
    document.getElementById("authorCount").textContent = authorCount;
    document.getElementById("lastUpdated").textContent = `Last updated: ${new Date().toLocaleString()}`;
}

function displayPosts(posts) {
    const postsEl = document.getElementById("posts");

    if (posts.length === 0) {
        postsEl.innerHTML = '<div class="loading">No posts found</div>';
        return;
    }

    postsEl.innerHTML = posts
        .map(
            (post) => `
        <div class="post-card">
            <div class="post-title">
                <a href="${post.url}" target="_blank">${escapeHtml(post.title)}</a>
            </div>
            <div class="post-meta">
                <span>👤 <span class="post-author">${escapeHtml(post.author)}</span></span>
            </div>
            <div class="post-stats">
                <span class="stat">💬 ${post.replies} replies</span>
                <span class="stat">👁️ ${post.views} views</span>
                ${post.pinned ? '<span class="stat">📌 Pinned</span>' : ""}
            </div>
            <div class="post-date">
                📅 ${formatDate(post.created_at)}
            </div>
        </div>
    `
        )
        .join("");
}

function formatDate(dateString) {
    const date = new Date(dateString);
    const now = new Date();
    const diffTime = Math.abs(now - date);
    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));

    if (diffDays === 0) {
        return "Today";
    } else if (diffDays === 1) {
        return "Yesterday";
    } else if (diffDays < 7) {
        return `${diffDays} days ago`;
    } else if (diffDays < 30) {
        return `${Math.floor(diffDays / 7)} weeks ago`;
    } else if (diffDays < 365) {
        return `${Math.floor(diffDays / 30)} months ago`;
    } else {
        return date.toLocaleDateString();
    }
}

function escapeHtml(text) {
    const div = document.createElement("div");
    div.textContent = text;
    return div.innerHTML;
}

// Load posts when page loads
document.addEventListener("DOMContentLoaded", loadPosts);
